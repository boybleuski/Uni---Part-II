package Assignment3;

import java.math.BigInteger;

public class Assignment3 
{
	private static BigInteger p = new BigInteger("178011905478542266528237562450159990145232156369120674273274450314442865788737020770612695252123463079567156784778466449970650770920727857050009668388144034129745221171818506047231150039301079959358067395348717066319802262019714966524135060945913707594956514672855690606794135837542707371727429551343320695239");
	private static BigInteger g = new BigInteger("174068207532402095185811980123523436538604490794561350978495831040599953488455823147851597408940950725307797094915759492368300574252438761037084473467180148876118103083043754985190983472601550494691329488083395492313850000361646482644608492304078721818959999056496097769368017749273708962006689187956744210730");
	
	public static void main (String[] args)
	{
		System.out.println("Hello.");
		System.out.println(fastExponentation(new BigInteger("-63"), new BigInteger("64")));
	}
	
	public static BigInteger fastExponentation(BigInteger a, BigInteger b)
	{
		BigInteger bigIntZero = new BigInteger("0");
		BigInteger bigIntOne = new BigInteger("1");
		BigInteger bigIntTwo = new BigInteger("2");
		
		// given x^y, where y = 1.
		if (b.equals(bigIntOne))
			return a;
		
		// given x^y, where y = 2.
		else if (b.equals(bigIntTwo))
			return a.multiply(a);
		
		// given x^y, where y is even.
		else if (b.mod(bigIntTwo).equals(bigIntZero))
			return fastExponentation(fastExponentation(a, b.divide(bigIntTwo)), bigIntTwo);
		
		// given x^y, where y is odd.
		else
			return a.multiply(fastExponentation(fastExponentation(a, (b.subtract(bigIntOne)).divide(bigIntTwo)), bigIntTwo));
	}
}
